<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>bb2716e7-5631-4e3d-bc2e-d45bb4d5d311</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.0" />
    <DotNetCliToolReference Include="Microsoft.DotNet.Xdt.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\adapters\index.ts" />
    <None Remove="ClientApp\src\app\agents\authentication\authentication.agent.ts" />
    <None Remove="ClientApp\src\app\agents\authentication\operations-paths.ts" />
    <None Remove="ClientApp\src\app\agents\authentication\request\get-token.request.ts" />
    <None Remove="ClientApp\src\app\agents\authentication\response\get-token.response.ts" />
    <None Remove="ClientApp\src\app\agents\common\authentication-interceptor.ts" />
    <None Remove="ClientApp\src\app\agents\common\networkmanager\index.ts" />
    <None Remove="ClientApp\src\app\agents\common\networkmanager\network-manager.ts" />
    <None Remove="ClientApp\src\app\agents\common\networkmanager\post-parameters.ts" />
    <None Remove="ClientApp\src\app\agents\configuration\configuration.agent.ts" />
    <None Remove="ClientApp\src\app\agents\configuration\operations-paths.ts" />
    <None Remove="ClientApp\src\app\agents\configuration\response\get-configuration.response.ts" />
    <None Remove="ClientApp\src\app\agents\configuration\response\get-public-configuration.response.ts" />
    <None Remove="ClientApp\src\app\agents\core\agent\base-agent.ts" />
    <None Remove="ClientApp\src\app\agents\core\agent\path.ts" />
    <None Remove="ClientApp\src\app\agents\core\base-response.ts" />
    <None Remove="ClientApp\src\app\agents\core\base-state.response.ts" />
    <None Remove="ClientApp\src\app\agents\index.ts" />
    <None Remove="ClientApp\src\app\models\configuration\configuration.model.ts" />
    <None Remove="ClientApp\src\app\models\configuration\public.configuration.model.ts" />
    <None Remove="ClientApp\src\app\models\security\user.model.ts" />
    <None Remove="ClientApp\src\app\modules\core\core.module.ts" />
    <None Remove="ClientApp\src\app\modules\main\main-routing.module.ts" />
    <None Remove="ClientApp\src\app\modules\security\authentication\authentication.routing.module.ts" />
    <None Remove="ClientApp\src\app\services\common\loading.service.ts" />
    <None Remove="ClientApp\src\app\services\common\storage.service.ts" />
    <None Remove="ClientApp\src\app\services\configuration\configuration-storage.service.ts" />
    <None Remove="ClientApp\src\app\services\configuration\configuration.service.ts" />
    <None Remove="ClientApp\src\app\services\index.ts" />
    <None Remove="ClientApp\src\app\services\security\login-storage.service.ts" />
    <None Remove="ClientApp\src\app\services\security\login.service.ts" />
    <None Remove="ClientApp\src\app\services\security\security-guard.service.ts" />
    <None Remove="ClientApp\src\app\shared\app.constants.ts" />
    <None Remove="ClientApp\src\app\shared\material\index.ts" />
    <None Remove="ClientApp\src\app\shared\material\material.module.ts" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\angular.json" />
    <Content Include="ClientApp\e2e\tsconfig.e2e.json" />
    <Content Include="ClientApp\package.json" />
    <Content Include="ClientApp\src\tsconfig.app.json" />
    <Content Include="ClientApp\src\tsconfig.spec.json" />
    <Content Include="ClientApp\src\tslint.json" />
    <Content Include="ClientApp\tsconfig.json" />
    <Content Include="ClientApp\tslint.json" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\modules\main\viewmodels\" />
    <Folder Include="ClientApp\src\app\directives\" />
    <Folder Include="ClientApp\src\styles\" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\adapters\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\authentication\authentication.agent.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\authentication\operations-paths.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\authentication\request\get-token.request.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\authentication\response\get-token.response.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\common\authentication-interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\common\networkmanager\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\common\networkmanager\network-manager.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\common\networkmanager\post-parameters.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\configuration\configuration.agent.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\configuration\operations-paths.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\configuration\response\get-configuration.response.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\configuration\response\get-public-configuration.response.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\core\agent\base-agent.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\core\agent\path.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\core\base-response.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\core\base-state.response.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\agents\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\configuration\configuration.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\configuration\public.configuration.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\security\user.model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\modules\core\core.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\modules\main\main-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\modules\security\authentication\authentication.routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\common\loading.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\common\storage.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\configuration\configuration-storage.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\configuration\configuration.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\security\login-storage.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\security\login.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\security\security-guard.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\app.constants.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\material\index.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\material\material.module.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Infrastructure\Transport\Configuration\Request\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <Target Name="ApplyXdtConfigTransform" BeforeTargets="_TransformWebConfig">
    <PropertyGroup>
      <_SourceWebConfig>$(MSBuildThisFileDirectory)Web.config</_SourceWebConfig>
      <_XdtTransform>$(MSBuildThisFileDirectory)Web.$(Configuration).config</_XdtTransform>
      <_TargetWebConfig>$(PublishDir)Web.config</_TargetWebConfig>
    </PropertyGroup>
    <Exec Command="dotnet transform-xdt --xml &quot;$(_SourceWebConfig)&quot; --transform &quot;$(_XdtTransform)&quot; --output &quot;$(_TargetWebConfig)&quot;" Condition="Exists('$(_XdtTransform)')" />
  </Target>

</Project>
